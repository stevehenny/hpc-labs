//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35059454
// Cuda compilation tools, release 12.6, V12.6.85
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_89
.address_size 64

.global .align 4 .u32 d_run;

.entry _Z16hot_plate_kernelPfS_iif(
	.param .u64 _Z16hot_plate_kernelPfS_iif_param_0,
	.param .u64 _Z16hot_plate_kernelPfS_iif_param_1,
	.param .u32 _Z16hot_plate_kernelPfS_iif_param_2,
	.param .u32 _Z16hot_plate_kernelPfS_iif_param_3,
	.param .f32 _Z16hot_plate_kernelPfS_iif_param_4
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [_Z16hot_plate_kernelPfS_iif_param_0];
	ld.param.u64 	%rd2, [_Z16hot_plate_kernelPfS_iif_param_1];
	ld.param.u32 	%r8, [_Z16hot_plate_kernelPfS_iif_param_2];
	ld.param.u32 	%r10, [_Z16hot_plate_kernelPfS_iif_param_3];
	ld.param.f32 	%f1, [_Z16hot_plate_kernelPfS_iif_param_4];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	mad.lo.s32 	%r2, %r12, %r11, %r1;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r3, %tid.y;
	mad.lo.s32 	%r4, %r14, %r13, %r3;
	add.s32 	%r15, %r10, -1;
	setp.ge.s32 	%p1, %r4, %r15;
	add.s32 	%r16, %r8, -1;
	setp.ge.s32 	%p2, %r2, %r16;
	or.pred  	%p3, %p2, %p1;
	setp.lt.s32 	%p4, %r4, 1;
	mov.u32 	%r24, 0;
	or.pred  	%p5, %p4, %p3;
	setp.lt.s32 	%p6, %r2, 1;
	or.pred  	%p7, %p6, %p5;
	@%p7 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	add.s32 	%r17, %r4, -1;
	mad.lo.s32 	%r18, %r17, %r8, %r2;
	mul.wide.s32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd3, %rd5;
	shl.b32 	%r19, %r8, 1;
	add.s32 	%r20, %r18, %r19;
	mul.wide.s32 	%rd7, %r20, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f2, [%rd8];
	ld.global.f32 	%f3, [%rd6];
	add.f32 	%f4, %f3, %f2;
	mad.lo.s32 	%r21, %r4, %r8, %r2;
	mul.wide.s32 	%rd9, %r21, 4;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f5, [%rd10+4];
	add.f32 	%f6, %f4, %f5;
	ld.global.f32 	%f7, [%rd10+-4];
	add.f32 	%f8, %f6, %f7;
	mul.f32 	%f9, %f8, 0f3E800000;
	add.s64 	%rd11, %rd4, %rd9;
	st.global.f32 	[%rd11], %f9;
	ld.global.f32 	%f10, [%rd10];
	sub.f32 	%f11, %f9, %f10;
	abs.f32 	%f12, %f11;
	setp.gt.f32 	%p8, %f12, %f1;
	selp.u32 	%r24, 1, 0, %p8;

$L__BB0_2:
	{ 
	.reg .pred 	%p1; 
	.reg .pred 	%p2; 
	setp.ne.u32 	%p1, %r24, 0; 
	bar.red.or.pred 	%p2, 0, %p1; 
	selp.u32 	%r7, 1, 0, %p2; 
	}
	or.b32  	%r22, %r1, %r3;
	setp.ne.s32 	%p9, %r22, 0;
	@%p9 bra 	$L__BB0_4;

	mov.u64 	%rd12, d_run;
	atom.global.or.b32 	%r23, [%rd12], %r7;

$L__BB0_4:
	ret;

}

